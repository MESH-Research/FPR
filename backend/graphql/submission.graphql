"""
A Submission
"""
type Submission {
    id: ID!
    title: String
    created_at: DateTime!
    updated_at: DateTime
    publication: Publication!
    users: [User!]! @belongsToMany
    files: [SubmissionFile]! @hasMany
    pivot: SubmissionUser
    status: SubmissionStatus!
    inline_comments: [InlineComment!]!
    overall_comments: [OverallComment!]!
}

"""
A user associated with a submission and a role
"""
type SubmissionUser {
    id: ID!
    role_id: ID!
    submission_id: ID!
    user_id: ID!
}

"""
An uploaded file associated with a submission
"""
type SubmissionFile {
    id: ID!
    submission_id: ID!
    file_upload: String!
}

enum SubmissionStatus {
    INITIALLY_SUBMITTED @enum(value: 1)
    AWAITING_RESUBMISSION @enum(value: 2)
    RESUBMITTED @enum(value: 3)
    AWAITING_REVIEW @enum(value: 4)
    REJECTED @enum(value: 5)
    ACCEPTED_AS_FINAL @enum(value: 6)
    EXPIRED @enum(value: 7)
    UNDER_REVIEW @enum(value: 8)
    AWAITING_DECISION @enum(value: 9)
    AWAITING_REVISION @enum(value: 10)
    ARCHIVED @enum(value: 11)
    DELETED @enum(value: 12)
}

type InlineComment {
    id: ID!
    content: String!
    created_by: User!
    reply_to: InlineComment  # This references the particular comment being replied to.
    parent: InlineComment # The top level comment this comment is under.
    created_at: DateTime!
    style_criteria: [String!] # Style criteria are saved as strings rather than a reference to the model to avoid issues with future changes to criteria names
}

type OverallComment {
    id: ID!
    content: String!
    created_by: User!
    reply_to: OverallComment
    parent: OverallComment
    created_at: DateTime!
}

extend type Mutation {
    updateSubmission(submission: SubmissionInput @spread): Submission @update
}

input SubmissionInput {
    id: ID!
    inline_comments: UpdateInlineCommentsHasMany
    overall_comments: UpdateOverallCommentsHasMany
}

input UpdateInlineCommentsHasMany {
    create: [CreateInlineCommentInput!]
}

input UpdateOverallCommentsHasMany {
    create: [CreateOverallCommentInput!]
}
input CreateInlineCommentInput {
    content: String!
    reply_to: String
    style_criteria: [String!]
}

input CreateOverallCommentInput {
    content: String!
    reply_to: String
}
