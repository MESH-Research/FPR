extend type Submission {
    inline_comments: [InlineComment!]! @hasMany(relation: "inlineComments")
    overall_comments: [OverallComment!]! @hasMany(relation: "overallComments")
}

"""
An inline comment of a submission
"""
type InlineComment {
    id: ID!
    content: String!
    created_by: User! @belongsTo(relation: "createdBy")
    updated_by: User! @belongsTo(relation: "updatedBy")
    created_at: DateTime!
    updated_at: DateTime!
    replies: [InlineCommentReply!]
    style_criteria: [InlineCommentStyleCriteria!]
    from: Int
    to: Int
}

"""
The static style criteria of an inline comment
"""
type InlineCommentStyleCriteria {
    name: String
    icon: String
}

"""
A reply to an inline comment of a submission
"""
type InlineCommentReply {
    id: ID!
    content: String!
    created_by: User!
    reply_to_id: ID!
    created_at: DateTime!
}

"""
An overall comment of a submission
"""
type OverallComment {
    id: ID!
    content: String!
    created_by: User! @belongsTo(relation: "createdBy")
    created_at: DateTime!
    updated_by: User! @belongsTo(relation: "updatedBy")
    updated_at: DateTime!
    replies: [OverallCommentReply!]
}

"""
A reply to an overall comment of a submission
"""
type OverallCommentReply {
    id: ID!
    content: String!
    created_by: User!
    reply_to_id: ID!
    created_at: DateTime!
}

extend input UpdateSubmissionInput {
    inline_comments: InlineCommentHasManyInput
        @rename(attribute: "inlineComments")
    overall_comments: OverallCommentHasManyInput
        @rename(attribute: "overallComments")
}

input InlineCommentHasManyInput {
    create: [CreateInlineCommentInput!]
    update: [UpdateInlineCommentInput!]
}

input CreateInlineCommentInput {
    content: String!
    style_criteria: [InlineCommentStyleCriteriaInput!]
    from: Int
    to: Int
    parent_id: ID
    reply_to_id: ID
}

input UpdateInlineCommentInput {
    id: ID!
    content: String
    style_criteria: [InlineCommentStyleCriteriaInput!]
    from: Int
    to: Int
}

input InlineCommentStyleCriteriaInput {
    name: String
    icon: String
}

input OverallCommentHasManyInput {
    create: [CreateInlineCommentInput!]
    update: [UpdateInlineCommentInput!]
}

input CreateOverallCommentInput {
    content: String!
    parent_id: ID
    reply_to_id: ID
}

input UpdateOverallCommentInput {
    id: ID!
    content: String
}
