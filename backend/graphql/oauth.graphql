extend type Query {
    identityProviders: [IdentityProviderButton]
}

extend type Mutation {
    loginOrcid: String!

    loginOrcidCallback(code: String!): LoginOrcidResponse

    registerOauthUser(
        input: RegisterOauthUserInput
    ): User
        @validator(class: "RegisterOauthUserValidator")
        @field(
            resolver: "App\\GraphQL\\Mutations\\RegisterOauthUser@register"
        )
}

""" Types """
type IdentityProviderButton {
    name: String!
    label: String!
    icon: String
}
type LoginOrcidResponse {
    action: String
    user: ProviderUser
    provider: Provider
}
type ProviderUser {
    name: String
    username: String
    email: String
}
type Provider {
    provider_name: String!
    provider_id: String!
    user_id: ID
}

""" Inputs """
input RegisterOauthUserInput {
    user: ProviderUserInput
    provider: ProviderInput
}
input ProviderUserInput {
    name: String
    username: String!
    email: String!
}
input ProviderInput {
    provider_name: String!
    provider_id: String!
}
