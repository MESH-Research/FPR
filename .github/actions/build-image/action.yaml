name: Build
inputs:
    target:
        description: "package to build"
        required: false
        default: "default"
outputs:
    version:
        description: "Version of the package that was built"
        value: ${{ steps.docker-meta-fpm.outputs.version }}
    tag_count:
        description: "Number of tags that would be pushed"
        value: ${{ steps.count-tags.outputs.tags }}
    tags:
        description: "List of tags"
        value: ${{ steps.docker-meta-fpm.outputs.tags}}
runs:
    using: "composite"
    steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Find Tag
          id: tagger
          shell: bash
          run: |
              git fetch --prune --unshallow
              echo "VERSION=$(git describe --tags)" >> ${GITHUB_ENV}
              echo "VERSION_URL=https://github.com/MESH-Research/Pilcrow/commits/${GITHUB_SHA}" >> ${GITHUB_ENV}
              echo "VERSION_DATE=$(git show -s --format=%cI ${GITHUB_SHA})" >> ${GITHUB_ENV}
        - uses: docker/setup-buildx-action@v3
        - name: Docker meta (FPM)
          id: docker-meta-fpm
          uses: docker/metadata-action@v5
          with:
            images: |
              ghcr.io/${{ github.repository }}/${{ (inputs.target == 'default' && 'cache/') || ''}}fpm
            tags: |
              type=edge
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=sha,enable=${{ inputs.target == 'default'}}
            bake-target: fpm
        - run: |
            echo "tags=$( wc -l <<< "$DOCKER_METADATA_OUTPUT_TAGS" )" >> "$GITHUB_OUTPUT"
          shell: bash
          name: Count Tags
          id: count-tags
        - name: Docker meta (WEB)
          id: docker-meta-web
          uses: docker/metadata-action@v5
          with:
            images: |
              ghcr.io/${{ github.repository }}/${{ (inputs.target == 'default' && 'cache/') || ''}}web
            tags: |
              type=edge
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=sha,enable=${{ inputs.target == 'default'}}
            bake-target: web
        - uses: int128/docker-build-cache-config-action@v1
          id: cache-web
          with:
            image: ghcr.io/${{ github.repository }}/cache/web
        - uses: int128/docker-build-cache-config-action@v1
          id: cache-fpm
          with:
            image: ghcr.io/${{ github.repository }}/cache/fpm
        - name: Build and push
          uses: docker/bake-action@v4
          if: ${{ steps.docker-meta-fpm.outputs.tags != ''}}
          env:
            FPM_CACHE_FROM: ${{ steps.cache-fpm.outputs.cache-from }}
            FPM_CACHE_TO: ${{ steps.cache-fpm.outputs.cache-to }}
            WEB_CACHE_FROM: ${{ steps.cache-web.outputs.cache-from }}
            WEB_CACHE_TO: ${{ steps.cache-web.outputs.cache-to }}
          with:
            targets: ${{ inputs.target }}
            files: |
              ./docker-bake.hcl
              ${{ steps.docker-meta-fpm.outputs.bake-file }}
              ${{ steps.docker-meta-web.outputs.bake-file }}