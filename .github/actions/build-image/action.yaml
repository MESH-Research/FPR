name: Build
inputs:
    target:
        description: "package to build"
        required: false
runs:
    using: "composite"
    steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Find Tag
          id: tagger
          shell: bash
          run: |
              echo "version=$(git describe --tags)" >> $GITHUB_OUTPUT
              echo "url=https://github.com/MESH-Research/CCR/commits/${GITHUB_SHA}" >> $GITHUB_OUTPUT
              echo "date=$(git show -s --format=%cI ${GITHUB_SHA})" >> $GITHUB_OUTPUT
        - uses: docker/setup-buildx-action@v2
        - name: Docker meta (FPM)
          id: docker-meta-fpm
          uses: docker/metadata-action@v4
          with:
            images: |
              pilcrow/fpm:latest
              ghcr.io/${{ github.repository_owner }}/pilcrow/fpm
            tags: |
              type=ref,event=pr
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=sha,enable=${{ github.event_name == 'push' }}
            bake-target: fpm
        - name: Docker meta (WEB)
          id: docker-meta-web
          uses: docker/metadata-action@v4
          with:
            images: |
              pilcrow/web:latest
              ghcr.io/${{ github.repository_owner }}/pilcrow/web
            tags: |
              type=ref,event=pr
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=sha,enable=${{ github.event_name == 'push' }}
              type=raw,value=pilcrow/web:latest
            bake-target: web
        - name: Build and push
          uses: docker/bake-action@v4
          with:
            pull: true
            targets: ${{ inputs.target }}

            files: |
              ./docker-bake.hcl
              ${{ steps.docker-meta-fpm.outputs.bake-file }}
              ${{ steps.docker-meta-web.outputs.bake-file }}
        - run: |
            gzip -c /tmp/web.tar > /tmp/web.tar.gz
            gzip -c /tmp/fpm.tar > /tmp/fpm.tar.gz
          shell: bash
        - name: Upload artifact
          if:  ${{ inputs.target == 'ci' }}
          uses: actions/upload-artifact@v3
          with:
              name: Docker Images
              path: /tmp/*.tar.gz
