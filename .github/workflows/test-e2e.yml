name: "Test: E2E"

on:
  push:
    branches: [master, development]
  pull_request:
    branches: [master, development]
jobs:
  build-client:
    runs-on: ubuntu-20.04
    name: "Build Client"
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Build
        working-directory: ./client
        env:
          CYPRESS: true
        run: |
          yarn install
          yarn build
      - name: Upload Client
        uses: actions/upload-artifact@v2
        with:
          name: client-build
          path: "client/dist/spa"
          retention-days: 1
  cypress:
    runs-on: ubuntu-20.04
    name: "Cypress.io"
    needs: ["build-client"]
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v2
      # - name: Override cypress name if pull request
      #   run: |
      #     echo "COMMIT_INFO_MESSAGE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
      #   if: github.event_name == 'pull_request'
      - name: Download client build
        uses: actions/download-artifact@v2
        with:
          name: client-build
          path: client-build
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: backend/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        name: Restore yarn Cache
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Setup PHP with Opcache Support
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          coverage: none
          ini-values: opcache.enable_cli=1
      - uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '5.7'
      - name: API Startup
        working-directory: ./backend
        env:
          APP_ENV: local
          APP_DEBUG: true
          APP_HOSTNAME: localhost
          APP_URL: http://localhost:8080
          APP_KEY: base64:J6SHqWBtKA18a8eCxIWziMSPuJqJRPuqy0GdX75P+rM=
          SANCTUM_STATEFUL_DOMAINS: localhost:8080
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel
          DB_USERNAME: root
          DB_PASSWORD: ""
          DB_DATABASE: ${{ github.workspace }}/backend/testdb.sqlite
          LIGHTHOUSE_CACHE_ENABLE: true
          LIGHTHOUSE_CACHE_VERSION: 2
        run: |
          composer install
          touch $DB_DATABASE
          php artisan migrate --seed
          php artisan lighthouse:cache
          php artisan serve -q &
      - name: Client Startup
        working-directory: ./client-build
        env:
          CYPRESS: true
        run: |
          yarn global add @quasar/cli
          quasar serve --port 8080 --proxy ../client/proxy.js --history &
      - name: Cypress Run
        uses: cypress-io/github-action@v3
        env:
          ELECTRON_EXTRA_LAUNCH_ARGS: "--force-prefers-reduced-motion"
          CYPRESS_defaultCommandTimeout: 10000
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # pass the project ID from the secrets through environment variable
          CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          CYPRESS_RETRIES: 3
        with:
          record: true
          parallel: true
          group: "github-actions"
          working-directory: ./client
          wait-on: "http://localhost:8080"
          config: baseUrl=http://localhost:8080
          tag: ${{ github.event_name }}
      - name: Upload Screenshots
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: "client/test/cypress/screenshots"
          retention-days: 14
