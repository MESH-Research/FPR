name: "Test: Unit"

on:
  push:
    branches: [master, development, "renovate/**"]
  pull_request:
env:
  DB_CONNECTION: mysql
  DB_HOST: localhost
  DB_PORT: 3306
  DB_DATABASE: homestead
  DB_USERNAME: root
  DB_PASSWORD: root
  APP_ENV: testing
  APP_DEBUG: true
  APP_KEY: base64:J6SHqWBtKA18a8eCxIWziMSPuJqJRPuqy0GdX75P+rM=

jobs:
  phpunit:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: backend

    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Setup Mysql
        run: |
          sudo systemctl start mysql.service
          mysql -uroot -proot -e "CREATE schema $DB_DATABASE;"
      - name: Install pandoc
        run: |
          wget https://github.com/jgm/pandoc/releases/download/2.18/pandoc-2.18-1-${build}.deb -O /tmp/pandoc.deb && \
          dpkg -i /tmp/pandoc.deb
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Migrate Database
        run: php artisan migrate

      - name: Unit Tests
        run: php artisan test

  vitest:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install quasar CLI
        run: yarn global add @quasar/cli

      - name: Install dependencies
        run: yarn install

      - name: Build quasar SPA
        run: $(yarn global bin)/quasar build -m spa

      - name: Jest Unit Tests
        run: yarn test:unit:ci
